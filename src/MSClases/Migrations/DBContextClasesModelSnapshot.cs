// <auto-generated />
using MSClases.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSClases.Migrations
{
    [DbContext(typeof(DBContextClases))]
    partial class DBContextClasesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MSClases.Models.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Clase");

                    b.ToTable("Clases", (string)null);
                });

            modelBuilder.Entity("MSClases.Models.ClaseProfesor", b =>
                {
                    b.Property<int>("IdClase")
                        .HasColumnType("int");

                    b.Property<string>("Ci")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdClaseNavigationId")
                        .HasColumnType("int");

                    b.HasKey("IdClase", "Ci");

                    b.HasIndex("IdClaseNavigationId");

                    b.ToTable("ClaseProfesores", (string)null);
                });

            modelBuilder.Entity("MSClases.Models.ClaseProfesor", b =>
                {
                    b.HasOne("MSClases.Models.Clase", "IdClaseNavigation")
                        .WithMany()
                        .HasForeignKey("IdClaseNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClaseNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
