@page "/lesson/create"

@using global::Shared.DTOs
@using Static
@inject HttpClient Http
@inject NavigationManager _navManager
@inject IToastService toastService

<PageTitle>Añadir Clase</PageTitle>

<h1>Añadir Clase</h1>
<hr/>
<br />

<EditForm Model="@clase" OnValidSubmit="AddClase">
    <DataAnnotationsValidator/>
     @* <ValidationSummary />*@    

    <div class="form-group">
        <label>Nombre Clase: </label>
        <div>
            <InputText @bind-Value="@clase.Nombre" class="form-control"/>
            <ValidationMessage For="@(() => clase.Nombre)" />
        </div>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">
        <span class="oi oi-check"></span>
        Crear Clase
    </button>
</EditForm>

@code {
    Clase clase = new Clase();

    private async Task AddClase()
    {
        try
        {
            var postClaseBody = new { nombre = clase.Nombre };           
            using var response = await Http.PostAsJsonAsync($"{Endpoints.AddClase}", postClaseBody);
            _navManager.NavigateTo("/clases");
        }
        catch(Exception)
        {
            toastService.ShowError("No se puede establecer conexión con el servidor");
        }
    }
}
