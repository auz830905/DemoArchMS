@page "/lesson/create"

@using Newtonsoft.Json
@using global::Shared.DTOs
@using Static
@inject HttpClient Http
@inject NavigationManager _navManager
@inject IToastService toastService

@attribute [Authorize(Roles = "adminclases, admin")]

<PageTitle>Añadir Clase</PageTitle>

<EditForm Model="@clase" OnValidSubmit="AddClase">
    <DataAnnotationsValidator/>
        @* <ValidationSummary />*@    

    <div class="form-group">
        <label>Nombre Clase: </label>
        <div>
            <InputText @bind-Value="@clase.Nombre" class="form-control"/>
            <ValidationMessage For="@(() => clase.Nombre)" />
        </div>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">
        <span class="oi oi-check"></span>
        Crear Clase
    </button>
</EditForm>

@code {
    Clase clase = new Clase();

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task AddClase()
    {
        try
        {
            var postClaseBody = new { nombre = clase.Nombre };                
            using var response = await Http.PostAsJsonAsync($"{Endpoints.AddClase}", postClaseBody );

            if (response.IsSuccessStatusCode)
            {

                await BlazoredModal.CloseAsync(ModalResult.Ok("Ok"));
                toastService.ShowSuccess("Clase agregada correctamente");  
            }
            else
            {
                var error = JsonConvert.DeserializeObject<Error>(response.Content.ReadAsStringAsync().Result);
                toastService.ShowError(error?.Message);  
            }                      
        }
        catch(Exception)
        {
            toastService.ShowError("No se puede establecer conexión con el servidor");
        }
    } 
}